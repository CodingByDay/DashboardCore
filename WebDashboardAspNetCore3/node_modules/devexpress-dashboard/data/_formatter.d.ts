/**
* DevExpress Dashboard (_formatter.d.ts)
* Version:  19.2.12
* Build date: Apr 23, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { DataItemNumericFormatType, DataItemNumericUnit, DateTimeGroupInterval, DateFormat, ExactDateFormat, DateTimeFormat, YearFormat, QuarterFormat, HourFormat, DayOfWeekFormat, MonthFormat } from '../model/enums';
export declare let defaultNumericFormat: {
    format: string;
    unitPower: string;
    precision: number;
    significantDigits: number;
};
export declare let defaultPercentFormat: {
    format: string;
    unitPower: number;
    precision: number;
    significantDigits: number;
    showTrailingZeros: boolean;
};
export declare let defaultScientificFormat: {
    format: string;
    precision: number;
};
declare type DateFormatInfoType = 'abbr' | 'full' | 'long' | 'num' | 'short' | 'timeOnly';
export declare let _types: {
    [name: string]: DateFormatInfoType;
};
export declare function format(value: any, formatViewModel: ValueFormatViewModel): any;
export declare function formatByFormatInfo(value: any, formatInfo: NumericFormatInfo | DateTimeFormatInfo): any;
export declare function formatFilterValue(filterValue: any): any;
export declare function constructIntervalFilterText(patterns: {
    from: string;
    to: string;
    range: string;
}, rangeText: {
    left: string;
    right: string;
}): any;
export declare function formatNumeric(value: any, numericFormatViewModel: NumericFormatViewModel): any;
export declare function formatDateTime(value: any, dateFormatViewModel: DateTimeFormatViewModel): any;
export declare function formatObject(value: any): any;
export declare function formatPercentValue(value: any): any;
export declare function formatScientificAxisValue(value: any): any;
export declare function formatAxisValue(value: any, axisMin: any, axisMax: any): any;
export declare function getAxisFormat(axisMin: any, axisMax: any): NumericFormatInfo;
export declare function calculateUnitPower(axisMin: any, axisMax: any): 1 | 0 | 3 | 2;
export declare function calculatePrecision(axisMin: any, axisMax: any): number;
export declare function convertToFormat(formatViewModel: ValueFormatViewModel): NumericFormatInfo | DateTimeFormatInfo;
export declare function _convertToNumberFormat(numericFormatViewModel: NumericFormatViewModel): NumericFormatInfo;
export declare function _convertToDateFormat(dateFormatViewModel: DateTimeFormatViewModel): DateTimeFormatInfo;
export declare function _getSyntheticDateTimeGroupInterval(groupInterval: DateTimeGroupInterval, exactDateFormat: ExactDateFormat): DateTimeGroupInterval | 'DateYear';
export declare function _convertNumericFormat(formatType: DataItemNumericFormatType): NumericFormatInfoType;
export declare function _convertNumericUnit(numericUnit: DataItemNumericUnit): string | number;
export interface ValueFormatViewModel {
    NumericFormat?: NumericFormatViewModel;
    DateTimeFormat?: DateTimeFormatViewModel;
}
export interface NumericFormatViewModel {
    FormatType?: DataItemNumericFormatType;
    Unit?: DataItemNumericUnit;
    Currency?: string;
    IncludeGroupSeparator?: boolean;
    ForcePlusSign?: boolean;
    SignificantDigits?: number;
    Precision?: number;
}
export interface DateTimeFormatViewModel {
    GroupInterval?: DateTimeGroupInterval;
    ExactDateFormat?: ExactDateFormat;
    DateFormat?: DateFormat;
    DateHourFormat?: DateTimeFormat;
    DateHourMinuteFormat?: DateTimeFormat;
    DateTimeFormat: DateTimeFormat;
    YearFormat: YearFormat;
    QuarterFormat?: QuarterFormat;
    MonthFormat?: MonthFormat;
    HourFormat?: HourFormat;
    DayOfWeekFormat?: DayOfWeekFormat;
}
export interface NumericFormatInfo {
    format?: NumericFormatInfoType;
    precision?: number;
    currency?: string;
    includeGroupSeparator?: boolean;
    significantDigits?: number;
    unitPower?: string | number;
    plus?: boolean;
    showTrailingZeros?: boolean;
    dateType?: DateFormatInfoType;
}
export declare type NumericFormatInfoType = 'fixedPoint' | 'currency' | 'exponential' | 'percent';
export declare type DateTimeGroupIntervalCamelCase = 'year' | 'quarter' | 'month' | 'day' | 'hour' | 'minute' | 'second' | 'dayOfYear' | 'dayOfWeek' | 'weekOfYear' | 'weekOfMonth' | 'monthYear' | 'quarterYear' | 'dayMonthYear' | 'dateHour' | 'dateHourMinute' | 'dateHourMinuteSecond' | 'none';
export declare type DateTimeFormatInfoType = DateTimeGroupIntervalCamelCase | 'dateYear';
export interface DateTimeFormatInfo {
    format: DateTimeFormatInfoType;
    dateType: DateFormatInfoType;
}
export {};
